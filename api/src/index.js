const neo4j = require('neo4j-driver');

const express = require('express');
const { ApolloServer } = require('apollo-server-express');
const schema = require('./graphQL-schema');
// set environment variables from ../.env
require('dotenv').config();

const app = express();

/*
 * Create a Neo4j driver instance to connect to the database
 * using credentials specified as environment variables
 * with fallback to defaults
 */
const driver = neo4j.driver(
  process.env.NEO4J_URI,
  neo4j.auth.basic(
    process.env.NEO4J_USER,
    process.env.NEO4J_PASSWORD,
  ),
);
/*
 * An executable GraphQL schema object from GraphQL type definitions
 * including autogenerated queries and mutations.
 */

const port = process.env.GRAPHQL_LISTEN_PORT;

const server = new ApolloServer({
  schema,
  context: { driver },
  introspection: true,
  playground: true,
});

console.log(process.env.NEO4J_URI);
console.log(process.env.NEO4J_USER);
console.log(process.env.NEO4J_PASSWORD);
console.log(process.env.GRAPHQL_LISTEN_PORT);


server.applyMiddleware({ app });

app.listen({ port }, () => console.log(`ðŸš€ Server ready at http://localhost:${port}${server.graphqlPath}`));
